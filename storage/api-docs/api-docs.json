{
    "openapi": "3.0.0",
    "info": {
        "title": "Bank Pay API",
        "description": "This API is structured to carry out transactions between users.",
        "contact": {
            "name": "Maria Luiza",
            "email": "malu.voltolini@outlook.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/transactions": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Create new transaction",
                "operationId": "createTransaction",
                "requestBody": {
                    "description": "Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value",
                                    "payer_id",
                                    "receiver_id"
                                ],
                                "properties": {
                                    "value": {
                                        "type": "number",
                                        "example": 100.5
                                    },
                                    "payer_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "4c410523-8b73-43ad-9840-23c2d5d91f31"
                                    },
                                    "receiver_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "f7a7a4c5-23e3-4762-bd02-04fa6d06152b"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Transaction created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The customer's wallet was not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Insufficient balance!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "value": [
                                                    "The value field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "document",
                                    "password",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "document": {
                                        "type": "string",
                                        "format": "regex",
                                        "maxLength": 14,
                                        "minLength": 11,
                                        "pattern": "^[0-9]+$"
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 12,
                                        "minLength": 6
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "user",
                                            "merchant"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully!"
                                        },
                                        "id": {
                                            "type": "string",
                                            "example": "9bc22136-5dc2-4436-94ca-c39400af230b"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    }
}